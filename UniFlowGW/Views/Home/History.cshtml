@using UniFlowGW.Controllers;
@using Microsoft.Extensions.Configuration;
@{
    ViewData["Title"] = "打印历史";
    var printerSN = Context.Session.GetCurrentPrinterSN();
    bool hasPrinter = !string.IsNullOrEmpty(printerSN);
    var loginId = Context.Session.GetLdapLoginId();
    var fileUploadSwitch = configuration["ModuleSwitch:FileUpload"];
}
@inject IConfiguration configuration
@inject DatabaseContext ctx

<nav class="navbar navbar-default">
    <div class="container-fluid">
        <!-- Brand and toggle get grouped for better mobile display -->
        <div class="navbar-header">
            <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1" aria-expanded="false">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            <a class="navbar-brand" href="#">Uniflow GW</a>
        </div>

        <!-- Collect the nav links, forms, and other content for toggling -->
        <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
            <ul class="nav navbar-nav">
                @if (fileUploadSwitch.Equals("On"))
                {
                    <li><a asp-action="Index" asp-controller="Home"><span class="glyphicon glyphicon-cloud-upload"></span> 上传文档打印</a></li>
                    <li class="active"><a href="#"><span class="glyphicon glyphicon-time"></span> 打印历史</a></li>
                }
                <li>
                    <a href="#">
                        <span class="glyphicon glyphicon-print"></span> 打印机
                        @if (hasPrinter)
                        {
                            Write($"[{printerSN}]");
                        }
                    </a>
                </li>
            </ul>

            <ul class="nav navbar-nav navbar-right">
                <li class="dropdown">
                    <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">
                        <i class="glyphicon glyphicon-user"></i> @loginId
                        <span class="caret"></span>
                    </a>
                    <ul class="dropdown-menu">
                        <li><a asp-action="UnBind" class="unbind" onclick="return confirm('您确定要解绑吗?')"><span class="glyphicon  glyphicon-log-out"></span> 解绑</a></li>
                    </ul>
                </li>
            </ul>
        </div><!-- /.navbar-collapse -->
    </div><!-- /.container-fluid -->
</nav>

@{
    <h3>打印历史</h3>

    var tasks = from t in ctx.PrintTasks
                where t.UserID == loginId
                orderby t.Time descending
                select t;

    <ul class="list-group">
        @foreach (var task in tasks) // .Take(10))
        {
            var st = "";
            switch (task.Status)
            {
                case PrintTaskStatus.Committed: st = "success"; break;
                case PrintTaskStatus.Failed: st = "danger"; break;
                case PrintTaskStatus.Processing: st = "info"; break;
                default: break;
            }

            <li class="list-group-item list-group-item-@st">
                <h4>@task.Document</h4>
                <small>@task.Time</small> - @task.Status.GetDisplayName() <br />
                份数: @task.PrintModel.Copies |
                颜色模式: @Html.DisplayFor(m => task.PrintModel.ColorMode) |
                页面尺寸: @Html.DisplayFor(m => task.PrintModel.PaperSize) |
                方向: @Html.DisplayFor(m => task.PrintModel.Orientation) |
                装订模式: @Html.DisplayFor(m => task.PrintModel.PaperMode)
                @if (task.Status == PrintTaskStatus.Failed)
                {
                    <p>错误消息: @task.Message</p>
                }
            </li>
        }

    </ul>

}
