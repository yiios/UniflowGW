@model UploadViewModel
@inject DatabaseContext ctx
@{
	ViewData["Title"] = "Upload";

	var hasUserId = !string.IsNullOrEmpty(Model.UserID);
}

<h2>上传打印文件</h2>

<form asp-controller="Home" role="form" asp-action="Upload" method="post" enctype="multipart/form-data" class="form-horizontal">
	<div class="form-group">
		<label target="UserID" class="col-xs-3 col-sm-2 control-label">用户名: </label>
		<div class="col-xs-9 col-sm-10">
			<input type="text" value="@Model?.UserID" @(hasUserId ? "" : "readonly=\"readonly\"")
				   id="UserID" name="UserID" class="form-control" placeholder="Input user">
		</div>
	</div>
	<div class="form-group">
		<label asp-for="Document" class="col-xs-3 col-sm-2 control-label">文件: </label>
		<div class="col-xs-9 col-sm-10">
			<input type="file" asp-for="Document" />
		</div>
	</div>
	<div class="form-group">
		<label class="col-xs-3 col-sm-2"></label>
		<div class="col-xs-9 col-sm-10">
			<button type="submit" class="btn btn-danger">上传</button>
		</div>
	</div>
</form>

@if (hasUserId)
{
	<hr />
	<h3>打印历史</h3>

	var tasks = from t in ctx.PrintTasks
				where t.UserID == Model.UserID
				orderby t.Time descending
				select t;

	<ul class="list-group">
		@foreach (var task in tasks.Take(10))
		{
			var st = "";
			switch (task.Status)
			{
				case PrintTaskStatus.Committed: st = "success"; break;
				case PrintTaskStatus.Failed: st = "danger"; break;
				case PrintTaskStatus.Processing: st = "info"; break;
				default: break;
			}

        <li class="list-group-item list-group-item-@st">
            <h4>@task.Document</h4>
            <small>@task.Time</small> - @task.Status.GetDisplayName() <br />
            份数: @task.PrintModel.Copies |
            颜色模式: @Html.DisplayFor(m => task.PrintModel.ColorMode) |
            页面尺寸: @Html.DisplayFor(m => task.PrintModel.PaperSize) |
            方向: @Html.DisplayFor(m => task.PrintModel.Orientation) |
            装订模式: @Html.DisplayFor(m => task.PrintModel.PaperMode)
            @if (task.Status == PrintTaskStatus.Failed)
            {
                <p>错误消息: @task.Message</p>
            }
        </li>
		}

	</ul>

}

